#!/usr/bin/env python
"""
Generate SHA Password for OpenLdap

Author: Rahul Patil <http://www.linuxian.com> 
"""
import hashlib
import os
from base64 import encodestring as encode
from base64 import decodestring as decode
from getpass import getpass


def check_password(tagged_digest_salt, password):
    """
    Checks the OpenLDAP tagged digest against the given password
    """
    # the entire payload is base64-encoded
    assert tagged_digest_salt.startswith('{SSHA}')

    # strip off the hash label
    digest_salt_b64 = tagged_digest_salt[6:]

    # the password+salt buffer is also base64-encoded.  decode and split the
    # digest and salt
    digest_salt = digest_salt_b64.decode('base64')
    digest = digest_salt[:20]
    salt = digest_salt[20:]

    sha = hashlib.sha1(password)
    sha.update(salt)

    return digest == sha.digest()


def make_secret(password):
    """
    Encodes the given password as a base64 SSHA hash+salt buffer
    """
    salt = os.urandom(4)
    h = hashlib.sha1(password)
    h.update(salt)
    return "{SSHA}" + encode(h.digest() + salt)[:-1]

if __name__ == '__main__':
	password1 = getpass("New Password: ")
	crypt_pass = make_secret(password1)
	password2 = getpass("Re-enter new password:")
	if check_password(crypt_pass,password2):
		print crypt_pass
	else:
		print "Password values do not match"
